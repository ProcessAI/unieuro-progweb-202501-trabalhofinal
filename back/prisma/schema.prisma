generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model cliente {
  idcliente     Int @id @default(autoincrement())
  clientenome   String @db.VarChar(50)
  clientestatus Int?   @default(0)
  sede          sede[]
}

model endereco {
  idendereco       Int      @id @default(autoincrement())
  enderecoendereco String   @db.VarChar(150)
  enderecocep      String   @db.Char(8)
  enderecolat      Decimal? @db.Decimal
  enderecolon      Decimal? @db.Decimal
  enderecostatus   Int?     @default(0)
  idsede           Int
  sede             sede     @relation(fields: [idsede], references: [idsede], onDelete: NoAction, onUpdate: NoAction)
}

model equipamento {
  idequipamento      Int      @id @default(autoincrement())
  equipamentoserie   String?  @db.VarChar(30)
  equipamentomodelo  String?  @db.VarChar(50)
  equipamentomac     String?  @db.Char(12)
  equipamentoipv4    String?  @db.VarChar(15)
  equipamentoipv6    String?  @db.VarChar(45)
  equipamentoanydesk String?  @db.VarChar(10)
  equipamentodw      String?  @db.VarChar(10)
  equipamentoalugado Boolean? @default(true)
  idsede             Int
  idtipoeq           Int
  sede               sede     @relation(fields: [idsede], references: [idsede], onDelete: NoAction, onUpdate: NoAction)
  tipoeq             tipoeq   @relation(fields: [idtipoeq], references: [idtipoeq], onDelete: NoAction, onUpdate: NoAction)
}

model laudo {
  idlaudo           Int            @id @default(autoincrement())
  laudodescricao    String
  laudohtmlmd       String
  laudodatainclusao DateTime       @default(now()) @db.Time(6)
  laudofechamento   DateTime?      @db.Time(6)
  laudostatus       Int            @default(0)
  idtipolaudo       Int
  idtipoinstalacao  Int
  laudoosclickup    String?        @db.VarChar(10)
  tipoinstalacao    tipoinstalacao @relation(fields: [idtipoinstalacao], references: [idtipoinstalacao], onDelete: NoAction, onUpdate: NoAction)
  tipolaudo         tipolaudo      @relation(fields: [idtipolaudo], references: [idtipolaudo], onDelete: NoAction, onUpdate: NoAction)
}

model sede {
  idsede         Int           @id @default(autoincrement())
  sedenome       String        @db.VarChar(50)
  sedestatus     Int           @default(0)
  idcliente      Int
  sededtinclusao DateTime?     @default(now()) @db.Date
  endereco       endereco[]
  equipamento    equipamento[]
  cliente        cliente       @relation(fields: [idcliente], references: [idcliente], onDelete: NoAction, onUpdate: NoAction)
}

model tipoeq {
  idtipoeq    Int           @id @default(autoincrement())
  tipoeqnome  String        @db.VarChar(50)
  equipamento equipamento[]
}

model tipoinstalacao {
  idtipoinstalacao   Int     @id @default(autoincrement())
  tipoinstalacaonome String  @db.VarChar(50)
  laudo              laudo[]
}

model tipolaudo {
  idtipolaudo       Int     @id @default(autoincrement())
  tipolaudonome     String  @db.VarChar(50)
  tipolaudotemplate String?
  laudo             laudo[]
}

model usuario {
  idusuario     Int    @id @default(autoincrement())
  usuarioemail  String @db.VarChar(100)
  usuariosenha  String @db.VarChar(100)
  usuariostatus Int    @default(0)
}